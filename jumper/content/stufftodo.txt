0a. Refactor to grid system

1. Move boxes
0000027DB00ACD70 32 0 1
0000027DB00ACFB0 64 0 2
0000027DB00ACE30 96 0 3
// if hit a wall
// player cannot move

// if hit a crate
// crate is moved alongside player

// if hit teleporter
// player is teleported to end of teleporter

// if hit a doorway, win

2. Change dimension

// if has collision due to dimension travel
// object is destroyed.

// then make it invisible
// ensure collision cannot occur when invisible

//play the animation

3. Redo feature

store
position, visibility, direction of player
position, visibility of moveables
position of idx in stage.

3456

 ice room pier ice room pier ice room pier 

3a. Both the visibility and change dimension should have same ticket.
3b. Allow undo when player is dead.

4. Make levels

4a. Generate a win state
// reach the end tile with none of the items destroyed
tileset widht and height is 24
set tile property on map grid size

// vector of paths
// spawnpoints
// vector of moveables


5. Text displays
When win -> "You won. Press N to proceed to the next level."
When player dies -> "You died. Press Z to undo or R to restart".
When click on esc -> "Press Esc again to confirm exit. All progress will be lost."
-> click Esc again exit
-> click A to close menu

When click on h -> display help menu
Two screens:
Opening Screen
Closing Screen


315, 60

630, 120

600, 480

A white rat with red eyes pushing a golden coin across a snow landscape, wide angle, pixel art 

6. Create level picker.
Main menu screen.
End game screen.

64 160 level 1
128 96 level 2
192 32 level 3

384 32 level 4
448 96 level 5
512 160 level 6

512 288 level 7
448 352 level 8
384 416 level 9

192 416 level 10
128 352 level 11
64 288 level 12


y * 600 + x

7. Create a save state
7a. Create the treasure chest sprite
-> when win, -> set level completed

7b. Create a save state in xml
-> convert completion state to xml
-> convert xml to completion state

7c. 
Create opening screen
Creating win screen
Create help screen

203 13
600 -203 = 397
480 - 13 = 467

8a. Refactor so that moveables is encapsulated within zone
8b. The stack for undo could possibly overflow
8c. Create a static variable for coin frames so that they rotate together.

9. Add sound

9a. Opening Screen and overworld - theme 1
    Individual level - theme 4/ theme 16
    victory - theme 6

sound for death - kill

sound for move
sound for change dimension

sound for win - success
sound for dialogue box

sound for undo and restart
sound clicking A in menu

control sound volume?

or at least mute

convert ogg files to WAV

10. Create a help screen
11. Create
10. Design the actual levels lmao

11. steps
C/C++ -> additional include directories
Linker -> Additional library directories
Input -> Additional dependencies
Paste .dll file in the project



Ideas:
switch stage
coins can stack

1. one long line

2. two guarded
b, a, b


12.
Parse from .tmx file

// spawn point
// coins
// end point


remember to reset coin position
13. 
Add a sack for coin

14.
Refactor

15.
Add a type of moveable that needs to be destroyed

16. Add a type of moveable that can destroy collision tiles


